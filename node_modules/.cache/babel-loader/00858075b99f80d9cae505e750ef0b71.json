{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ENAA\\\\Desktop\\\\Application de consultation de films\\\\src\\\\Components\\\\Genre.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Genre = _ref => {\n  _s();\n\n  let {\n    genre,\n    setGenre,\n    setPage,\n    type,\n    value,\n    setValue\n  } = _ref;\n\n  const fetchGenre = async () => {\n    const data = await fetch(`https://api.themoviedb.org/3/genre/${type}/list?api_key=3d820eab8fd533d2fd7e1514e86292ea&language=en-US`);\n    const {\n      genres\n    } = await data.json();\n    setGenre(genres);\n  };\n\n  useEffect(() => {\n    fetchGenre(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const CategoryAdd = genres => {\n    setValue([...value, genres]);\n    setGenre(genre.filter(g => g.id !== genres.id));\n    setPage(1);\n  };\n\n  const CategoryRemove = genres => {\n    setValue(value.filter(g => g.id !== genres.id));\n    setGenre([...genre, genres]);\n    setPage(1);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto px-4\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-wrap gap-2\",\n      children: [value === null || value === void 0 ? void 0 : value.map(Val => /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"px-4 py-2 bg-gray-800  rounded-md   duration-200 ease-in-out\",\n        onClick: () => CategoryRemove(Val),\n        children: Val.name\n      }, Val.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this)), genre === null || genre === void 0 ? void 0 : genre.map(Gen => /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"px-4 bg-blue-100 text-blue rounded-md   \",\n        onClick: () => CategoryAdd(Gen),\n        children: Gen.name\n      }, Gen.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Genre, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Genre;\nexport default Genre;\n\nvar _c;\n\n$RefreshReg$(_c, \"Genre\");","map":{"version":3,"sources":["C:/Users/ENAA/Desktop/Application de consultation de films/src/Components/Genre.js"],"names":["React","useEffect","Genre","genre","setGenre","setPage","type","value","setValue","fetchGenre","data","fetch","genres","json","CategoryAdd","filter","g","id","CategoryRemove","map","Val","name","Gen"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;AAgBA,MAAMC,KAAK,GAAG,QAAqE;AAAA;;AAAA,MAApE;AAAEC,IAAAA,KAAF;AAASC,IAAAA,QAAT;AAAmBC,IAAAA,OAAnB;AAA4BC,IAAAA,IAA5B;AAAkCC,IAAAA,KAAlC;AAAyCC,IAAAA;AAAzC,GAAoE;;AACjF,QAAMC,UAAU,GAAG,YAAY;AAC7B,UAAMC,IAAI,GAAG,MAAMC,KAAK,CACrB,sCAAqCL,IAAK,+DADrB,CAAxB;AAGA,UAAM;AAAEM,MAAAA;AAAF,QAAa,MAAMF,IAAI,CAACG,IAAL,EAAzB;AACAT,IAAAA,QAAQ,CAACQ,MAAD,CAAR;AACD,GAND;;AAQAX,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,UAAU,GADI,CAEd;AACD,GAHQ,EAGN,EAHM,CAAT;;AAKA,QAAMK,WAAW,GAAIF,MAAD,IAAuB;AACzCJ,IAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAWK,MAAX,CAAD,CAAR;AACAR,IAAAA,QAAQ,CAACD,KAAK,CAACY,MAAN,CAAcC,CAAD,IAAOA,CAAC,CAACC,EAAF,KAASL,MAAM,CAACK,EAApC,CAAD,CAAR;AACAZ,IAAAA,OAAO,CAAC,CAAD,CAAP;AACD,GAJD;;AAMA,QAAMa,cAAc,GAAIN,MAAD,IAAuB;AAC5CJ,IAAAA,QAAQ,CAACD,KAAK,CAACQ,MAAN,CAAcC,CAAD,IAAOA,CAAC,CAACC,EAAF,KAASL,MAAM,CAACK,EAApC,CAAD,CAAR;AACAb,IAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAWS,MAAX,CAAD,CAAR;AACAP,IAAAA,OAAO,CAAC,CAAD,CAAP;AACD,GAJD;;AAMA,sBACE;AAAK,IAAA,SAAS,EAAC,wBAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA,iBACGE,KADH,aACGA,KADH,uBACGA,KAAK,CAAEY,GAAP,CAAYC,GAAD,iBACV;AAEE,QAAA,SAAS,EAAC,8DAFZ;AAGE,QAAA,OAAO,EAAE,MAAMF,cAAc,CAACE,GAAD,CAH/B;AAAA,kBAKGA,GAAG,CAACC;AALP,SACOD,GAAG,CAACH,EADX;AAAA;AAAA;AAAA;AAAA,cADD,CADH,EAWGd,KAXH,aAWGA,KAXH,uBAWGA,KAAK,CAAEgB,GAAP,CAAYG,GAAD,iBACV;AAEE,QAAA,SAAS,EAAC,0CAFZ;AAGE,QAAA,OAAO,EAAE,MAAMR,WAAW,CAACQ,GAAD,CAH5B;AAAA,kBAKGA,GAAG,CAACD;AALP,SACOC,GAAG,CAACL,EADX;AAAA;AAAA;AAAA;AAAA,cADD,CAXH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAyBD,CAnDD;;GAAMf,K;;KAAAA,K;AAqDN,eAAeA,KAAf","sourcesContent":["import React, { useEffect } from \"react\";\n\ninterface GenreType {\n  id: number;\n  name: string;\n}\n\ninterface GenreProps {\n  genre: GenreType[];\n  setGenre: (genres: GenreType[]) => void;\n  setPage: (page: number) => void;\n  type: string;\n  value: GenreType[];\n  setValue: (value: GenreType[]) => void;\n}\n\nconst Genre = ({ genre, setGenre, setPage, type, value, setValue }: GenreProps) => {\n  const fetchGenre = async () => {\n    const data = await fetch(\n      `https://api.themoviedb.org/3/genre/${type}/list?api_key=3d820eab8fd533d2fd7e1514e86292ea&language=en-US`\n    );\n    const { genres } = await data.json();\n    setGenre(genres);\n  };\n\n  useEffect(() => {\n    fetchGenre();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const CategoryAdd = (genres: GenreType) => {\n    setValue([...value, genres]);\n    setGenre(genre.filter((g) => g.id !== genres.id));\n    setPage(1);\n  };\n\n  const CategoryRemove = (genres: GenreType) => {\n    setValue(value.filter((g) => g.id !== genres.id));\n    setGenre([...genre, genres]);\n    setPage(1);\n  };\n\n  return (\n    <div className=\"container mx-auto px-4\">\n      <div className=\"flex flex-wrap gap-2\">\n        {value?.map((Val) => (\n          <button\n            key={Val.id}\n            className=\"px-4 py-2 bg-gray-800  rounded-md   duration-200 ease-in-out\"\n            onClick={() => CategoryRemove(Val)}\n          >\n            {Val.name}\n          </button>\n        ))}\n\n        {genre?.map((Gen) => (\n          <button\n            key={Gen.id}\n            className=\"px-4 bg-blue-100 text-blue rounded-md   \"\n            onClick={() => CategoryAdd(Gen)}\n          >\n            {Gen.name}\n          </button>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Genre;"]},"metadata":{},"sourceType":"module"}