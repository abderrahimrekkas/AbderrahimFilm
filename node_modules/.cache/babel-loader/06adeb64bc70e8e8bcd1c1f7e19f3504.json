{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ENAA\\\\Desktop\\\\Application de consultation de films\\\\src\\\\Pages\\\\Info.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { img_300, unavailable } from \"../Components/config\";\nimport Pagination from \"../Components/Pagination\";\nimport Genre from \"../Components/Genre\";\nimport useGenre from \"../useGenre\";\nimport InfoCard from \"./InfoCard\"; // Import the InfoCard component\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst In = () => {\n  _s();\n\n  const [state, setState] = useState([]);\n  const [page, setPage] = useState(1);\n  const [genre, setGenre] = useState([]);\n  const [value, setValue] = useState([]);\n  const genreURL = useGenre(value);\n\n  const fetchTrending = async () => {\n    const data = await fetch(`\n    https://api.themoviedb.org/3/trending/all/day?api_key=3d820eab8fd533d2fd7e1514e86292ea&page=${page}`);\n    const dataJ = await data.json();\n    setState(dataJ.results);\n  };\n\n  useEffect(() => {\n    fetchTrending();\n  }, [page]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row py-5 my-5\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12 text-center mt-2 mb-4 fs-1 fw-bold text-decoration-underline\",\n          children: \"Movies\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Genre, {\n          genre: genre,\n          setGenre: setGenre,\n          setPage: setPage,\n          type: \"movie\",\n          value: value,\n          setValue: setValue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InfoCard, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), \" \", state.map(Val => {\n          const {\n            title,\n            poster_path,\n            release_date,\n            media_type,\n            id\n          } = Val; // Check if the media type is a movie\n\n          if (media_type === \"movie\") {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-3 col-sm-4 py-3\",\n              id: \"card\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card bg-dark\",\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  src: poster_path ? `${img_300}/${poster_path}` : unavailable,\n                  className: \"card-img-top pt-3 pb-0 px-3\",\n                  alt: title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 57,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card-body\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                    className: \"card-title text-center fs-5\",\n                    children: title\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 65,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"fs-6 text-center\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: release_date\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 69,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 68,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 64,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 19\n              }, this)\n            }, id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 17\n            }, this);\n          }\n\n          return null; // Return null for non-movie items\n        }), /*#__PURE__*/_jsxDEV(Pagination, {\n          page: page,\n          setPage: setPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(In, \"T9dSk3tnmhWrg+mC6KZ+tb3Qjv4=\", false, function () {\n  return [useGenre];\n});\n\n_c = In;\nexport default InfoCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"In\");","map":{"version":3,"sources":["C:/Users/ENAA/Desktop/Application de consultation de films/src/Pages/Info.js"],"names":["React","useState","useEffect","img_300","unavailable","Pagination","Genre","useGenre","InfoCard","In","state","setState","page","setPage","genre","setGenre","value","setValue","genreURL","fetchTrending","data","fetch","dataJ","json","results","map","Val","title","poster_path","release_date","media_type","id"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { img_300, unavailable } from \"../Components/config\";\r\nimport Pagination from \"../Components/Pagination\";\r\nimport Genre from \"../Components/Genre\";\r\nimport useGenre from \"../useGenre\";\r\nimport InfoCard from \"./InfoCard\"; // Import the InfoCard component\r\n\r\nconst In = () => {\r\n  const [state, setState] = useState([]);\r\n  const [page, setPage] = useState(1);\r\n  const [genre, setGenre] = useState([]);\r\n  const [value, setValue] = useState([]);\r\n  const genreURL = useGenre(value);\r\n\r\n  const fetchTrending = async () => {\r\n    const data = await fetch(`\r\n    https://api.themoviedb.org/3/trending/all/day?api_key=3d820eab8fd533d2fd7e1514e86292ea&page=${page}`);\r\n    const dataJ = await data.json();\r\n    setState(dataJ.results);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchTrending();\r\n  }, [page]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container\">\r\n        <div className=\"row py-5 my-5\">\r\n          <div className=\"col-12 text-center mt-2 mb-4 fs-1 fw-bold text-decoration-underline\">\r\n            Movies\r\n          </div>\r\n          <Genre\r\n            genre={genre}\r\n            setGenre={setGenre}\r\n            setPage={setPage}\r\n            type=\"movie\"\r\n            value={value}\r\n            setValue={setValue}\r\n          />\r\n          \r\n          <InfoCard /> {/* Display the InfoCard here */}\r\n          \r\n          {state.map((Val) => {\r\n            const {\r\n              title,\r\n              poster_path,\r\n              release_date,\r\n              media_type,\r\n              id,\r\n            } = Val;\r\n            // Check if the media type is a movie\r\n            if (media_type === \"movie\") {\r\n              return (\r\n                <div className=\"col-md-3 col-sm-4 py-3\" id=\"card\" key={id}>\r\n                  <div className=\"card bg-dark\">\r\n                    <img\r\n                      src={\r\n                        poster_path ? `${img_300}/${poster_path}` : unavailable\r\n                      }\r\n                      className=\"card-img-top pt-3 pb-0 px-3\"\r\n                      alt={title}\r\n                    />\r\n                    <div className=\"card-body\">\r\n                      <h5 className=\"card-title text-center fs-5\">\r\n                        {title}\r\n                      </h5>\r\n                      <div className=\"fs-6 text-center\">\r\n                        <div>{release_date}</div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              );\r\n            }\r\n            return null; // Return null for non-movie items\r\n          })}\r\n          <Pagination page={page} setPage={setPage} />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default InfoCard"]},"metadata":{},"sourceType":"module"}