{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ENAA\\\\Desktop\\\\Application de consultation de films\\\\src\\\\Pages\\\\TV.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { img_300, unavailable } from \"../Components/config\";\nimport Pagination from \"../Components/Pagination\";\nimport Genre from \"../Components/Genre\";\nimport useGenre from \"../useGenre\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst TV = () => {\n  _s();\n\n  const id = useParams();\n  const [state, setState] = useState([]);\n  const [page, setPage] = useState(1);\n  const [genre, setGenre] = useState([]);\n  const [value, setValue] = useState([]);\n  const genreURL = useGenre(value);\n\n  const fetchTrending = async () => {\n    const data = await fetch(`\n    https://api.themoviedb.org/3/discover/tv?api_key=3d820eab8fd533d2fd7e1514e86292ea&language=en-US&sort_by=popularity.desc&include_adult=false&include_video=false&page=${page}&with_genres=${genreURL}`);\n    const dataJ = await data.json();\n    setState(dataJ.results);\n  };\n\n  useEffect(() => {\n    fetchTrending();\n  }, [page, genreURL]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row py-5 my-5\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12 text-center mt-2 mb-4 fs-1 fw-bold text-decoration-underline\",\n          children: \"TV Series\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Genre, {\n          genre: genre,\n          setGenre: setGenre,\n          setPage: setPage,\n          type: \"tv\",\n          value: value,\n          setValue: setValue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), state.map(Val => {\n          const {\n            name,\n            title,\n            poster_path,\n            first_air_date,\n            release_date,\n            media_type,\n            id\n          } = Val;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-center\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bg-gray-900 text-white rounded-lg shadow-md w-72\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: poster_path ? `${img_300}/${poster_path}` : unavailable,\n                alt: title,\n                className: \"w-full h-96 object-cover pt-3 pb-0 px-3 rounded-lg\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"p-4\",\n                children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                  className: \"text-center text-lg font-semibold mb-2\",\n                  children: title || name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 59,\n                  columnNumber: 35\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex justify-evenly text-sm text-gray-300\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    children: media_type === \"tv\" ? \"TV\" : \"Movie\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 63,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: first_air_date || release_date\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 64,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(Link, {\n                    to: `/Infocard/${id}`,\n                    className: \"text-white-400 hover:underline\",\n                    children: \"Information\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 65,\n                    columnNumber: 35\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 62,\n                  columnNumber: 35\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 31\n            }, this)\n          }, id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 29\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(Pagination, {\n          page: page,\n          setPage: setPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(TV, \"f9UC505D8NLszq+kLVKh+d4nz3A=\", false, function () {\n  return [useParams, useGenre];\n});\n\n_c = TV;\nexport default TV;\n\nvar _c;\n\n$RefreshReg$(_c, \"TV\");","map":{"version":3,"sources":["C:/Users/ENAA/Desktop/Application de consultation de films/src/Pages/TV.js"],"names":["React","useState","useEffect","img_300","unavailable","Pagination","Genre","useGenre","Link","useParams","TV","id","state","setState","page","setPage","genre","setGenre","value","setValue","genreURL","fetchTrending","data","fetch","dataJ","json","results","map","Val","name","title","poster_path","first_air_date","release_date","media_type"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,OAAT,EAAkBC,WAAlB,QAAqC,sBAArC;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,SAASC,IAAT,EAAeC,SAAf,QAAgC,kBAAhC;;;;AACA,MAAMC,EAAE,GAAG,MAAM;AAAA;;AACf,QAAMC,EAAE,GAAGF,SAAS,EAApB;AACA,QAAM,CAACG,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACa,IAAD,EAAOC,OAAP,IAAkBd,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAM,CAACe,KAAD,EAAQC,QAAR,IAAoBhB,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACiB,KAAD,EAAQC,QAAR,IAAoBlB,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAMmB,QAAQ,GAAGb,QAAQ,CAACW,KAAD,CAAzB;;AAEA,QAAMG,aAAa,GAAG,YAAY;AAChC,UAAMC,IAAI,GAAG,MAAMC,KAAK,CAAE;AAC9B,4KAA4KT,IAAK,gBAAeM,QAAS,EAD7K,CAAxB;AAEA,UAAMI,KAAK,GAAG,MAAMF,IAAI,CAACG,IAAL,EAApB;AACAZ,IAAAA,QAAQ,CAACW,KAAK,CAACE,OAAP,CAAR;AACD,GALD;;AAMAxB,EAAAA,SAAS,CAAC,MAAM;AACdmB,IAAAA,aAAa;AACd,GAFQ,EAEN,CAACP,IAAD,EAAOM,QAAP,CAFM,CAAT;AAIA,sBACE;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,qEAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE,QAAC,KAAD;AACE,UAAA,KAAK,EAAEJ,KADT;AAEE,UAAA,QAAQ,EAAEC,QAFZ;AAGE,UAAA,OAAO,EAAEF,OAHX;AAIE,UAAA,IAAI,EAAC,IAJP;AAKE,UAAA,KAAK,EAAEG,KALT;AAME,UAAA,QAAQ,EAAEC;AANZ;AAAA;AAAA;AAAA;AAAA,gBAJF,EAYGP,KAAK,CAACe,GAAN,CAAWC,GAAD,IAAS;AAClB,gBAAM;AACJC,YAAAA,IADI;AAEJC,YAAAA,KAFI;AAGJC,YAAAA,WAHI;AAIJC,YAAAA,cAJI;AAKJC,YAAAA,YALI;AAMJC,YAAAA,UANI;AAOJvB,YAAAA;AAPI,cAQFiB,GARJ;AASA,8BACgB;AAAc,YAAA,SAAS,EAAC,qBAAxB;AAAA,mCACE;AAAK,cAAA,SAAS,EAAC,kDAAf;AAAA,sCACE;AACE,gBAAA,GAAG,EAAEG,WAAW,GAAI,GAAE5B,OAAQ,IAAG4B,WAAY,EAA7B,GAAiC3B,WADnD;AAEE,gBAAA,GAAG,EAAE0B,KAFP;AAGE,gBAAA,SAAS,EAAC;AAHZ;AAAA;AAAA;AAAA;AAAA,sBADF,eAME;AAAK,gBAAA,SAAS,EAAC,KAAf;AAAA,wCACE;AAAI,kBAAA,SAAS,EAAC,wCAAd;AAAA,4BACGA,KAAK,IAAID;AADZ;AAAA;AAAA;AAAA;AAAA,wBADF,eAIE;AAAK,kBAAA,SAAS,EAAC,2CAAf;AAAA,0CACE;AAAA,8BAAMK,UAAU,KAAK,IAAf,GAAsB,IAAtB,GAA6B;AAAnC;AAAA;AAAA;AAAA;AAAA,0BADF,eAEE;AAAA,8BAAMF,cAAc,IAAIC;AAAxB;AAAA;AAAA;AAAA;AAAA,0BAFF,eAGA,QAAC,IAAD;AACE,oBAAA,EAAE,EAAG,aAAYtB,EAAG,EADtB;AAEE,oBAAA,SAAS,EAAC,gCAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAHA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,sBANF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,aAAUA,EAAV;AAAA;AAAA;AAAA;AAAA,kBADhB;AA0BD,SApCA,CAZH,eAiDE,QAAC,UAAD;AAAY,UAAA,IAAI,EAAEG,IAAlB;AAAwB,UAAA,OAAO,EAAEC;AAAjC;AAAA;AAAA;AAAA;AAAA,gBAjDF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AA0DD,CA5ED;;GAAML,E;UACOD,S,EAKMF,Q;;;KANbG,E;AA8EN,eAAeA,EAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { img_300, unavailable } from \"../Components/config\";\nimport Pagination from \"../Components/Pagination\";\nimport Genre from \"../Components/Genre\";\nimport useGenre from \"../useGenre\";\nimport { Link, useParams } from \"react-router-dom\";\nconst TV = () => {\n  const id = useParams()\n  const [state, setState] = useState([]);\n  const [page, setPage] = useState(1);\n  const [genre, setGenre] = useState([]);\n  const [value, setValue] = useState([]);\n  const genreURL = useGenre(value);\n\n  const fetchTrending = async () => {\n    const data = await fetch(`\n    https://api.themoviedb.org/3/discover/tv?api_key=3d820eab8fd533d2fd7e1514e86292ea&language=en-US&sort_by=popularity.desc&include_adult=false&include_video=false&page=${page}&with_genres=${genreURL}`);\n    const dataJ = await data.json();\n    setState(dataJ.results);\n  };\n  useEffect(() => {\n    fetchTrending();\n  }, [page, genreURL]);\n\n  return (\n    <>\n      <div className=\"container\">\n        <div className=\"row py-5 my-5\">\n          <div className=\"col-12 text-center mt-2 mb-4 fs-1 fw-bold text-decoration-underline\">\n            TV Series\n          </div>\n          <Genre\n            genre={genre}\n            setGenre={setGenre}\n            setPage={setPage}\n            type=\"tv\"\n            value={value}\n            setValue={setValue}\n          />\n          {state.map((Val) => {\n            const {\n              name,\n              title,\n              poster_path,\n              first_air_date,\n              release_date,\n              media_type,\n              id,\n            } = Val;\n            return (\n                            <div key={id} className=\"flex justify-center\">\n                              <div className=\"bg-gray-900 text-white rounded-lg shadow-md w-72\">\n                                <img\n                                  src={poster_path ? `${img_300}/${poster_path}` : unavailable}\n                                  alt={title}\n                                  className=\"w-full h-96 object-cover pt-3 pb-0 px-3 rounded-lg\"\n                                />\n                                <div className=\"p-4\">\n                                  <h5 className=\"text-center text-lg font-semibold mb-2\">\n                                    {title || name}\n                                  </h5>\n                                  <div className=\"flex justify-evenly text-sm text-gray-300\">\n                                    <div>{media_type === \"tv\" ? \"TV\" : \"Movie\"}</div>\n                                    <div>{first_air_date || release_date}</div>\n                                  <Link \n                                    to={`/Infocard/${id}`} \n                                    className=\"text-white-400 hover:underline\"\n                                  >\n                                    Information\n                                  </Link>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          );\n          })}\n          <Pagination page={page} setPage={setPage} />\n    \n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default TV;\n"]},"metadata":{},"sourceType":"module"}