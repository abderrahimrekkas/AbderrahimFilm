{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ENAA\\\\Desktop\\\\Application de consultation de films\\\\src\\\\Components\\\\Genre.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Genre = _ref => {\n  _s();\n\n  let {\n    genre,\n    setGenre,\n    setPage,\n    type,\n    value,\n    setValue\n  } = _ref;\n\n  const fetchGenre = async () => {\n    const data = await fetch(`https://api.themoviedb.org/3/genre/${type}/list?api_key=3d820eab8fd533d2fd7e1514e86292ea&language=en-US`);\n    const {\n      genres\n    } = await data.json();\n    console.log(genres);\n    setGenre(genres);\n  };\n\n  useEffect(() => {\n    fetchGenre();\n  }, []);\n\n  const CategoryAdd = genres => {\n    setValue([...value, genres]);\n    setGenre(genre.filter(g => g.id !== genres.id));\n    setPage(1);\n  };\n\n  const CategoryRemove = genres => {\n    setValue(value.filter(g => g.id !== genres.id));\n    setGenre([...genre, genres]);\n    setPage(1);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full px-4 mx-auto\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-wrap mb-3\",\n        children: [value && value.map(Val => {\n          const {\n            id,\n            name\n          } = Val;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"m-2\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"bg-gray-900 text-white px-4 py-2 text-center rounded hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-gray-500 focus:ring-opacity-50\",\n              onClick: () => CategoryRemove(Val),\n              children: name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 19\n            }, this)\n          }, id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 17\n          }, this);\n        }), genre && genre.map(Gen => {\n          const {\n            id,\n            name\n          } = Gen;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"m-2\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"bg-gray-900 text-white px-4 py-2 text-center rounded hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-gray-500 focus:ring-opacity-50\",\n              onClick: () => CategoryAdd(Gen),\n              children: name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 19\n            }, this)\n          }, id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 17\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(Genre, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Genre;\nexport default Genre;\n\nvar _c;\n\n$RefreshReg$(_c, \"Genre\");","map":{"version":3,"sources":["C:/Users/ENAA/Desktop/Application de consultation de films/src/Components/Genre.js"],"names":["React","useEffect","Genre","genre","setGenre","setPage","type","value","setValue","fetchGenre","data","fetch","genres","json","console","log","CategoryAdd","filter","g","id","CategoryRemove","map","Val","name","Gen"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;AAEA,MAAMC,KAAK,GAAG,QAAyD;AAAA;;AAAA,MAAxD;AAAEC,IAAAA,KAAF;AAASC,IAAAA,QAAT;AAAmBC,IAAAA,OAAnB;AAA4BC,IAAAA,IAA5B;AAAkCC,IAAAA,KAAlC;AAAyCC,IAAAA;AAAzC,GAAwD;;AACrE,QAAMC,UAAU,GAAG,YAAY;AAC7B,UAAMC,IAAI,GAAG,MAAMC,KAAK,CACrB,sCAAqCL,IAAK,+DADrB,CAAxB;AAGA,UAAM;AAAEM,MAAAA;AAAF,QAAa,MAAMF,IAAI,CAACG,IAAL,EAAzB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AACAR,IAAAA,QAAQ,CAACQ,MAAD,CAAR;AACD,GAPD;;AASAX,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,UAAU;AACX,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMO,WAAW,GAAIJ,MAAD,IAAY;AAC9BJ,IAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAWK,MAAX,CAAD,CAAR;AACAR,IAAAA,QAAQ,CAACD,KAAK,CAACc,MAAN,CAAcC,CAAD,IAAOA,CAAC,CAACC,EAAF,KAASP,MAAM,CAACO,EAApC,CAAD,CAAR;AACAd,IAAAA,OAAO,CAAC,CAAD,CAAP;AACD,GAJD;;AAMA,QAAMe,cAAc,GAAIR,MAAD,IAAY;AACjCJ,IAAAA,QAAQ,CAACD,KAAK,CAACU,MAAN,CAAcC,CAAD,IAAOA,CAAC,CAACC,EAAF,KAASP,MAAM,CAACO,EAApC,CAAD,CAAR;AACAf,IAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAWS,MAAX,CAAD,CAAR;AACAP,IAAAA,OAAO,CAAC,CAAD,CAAP;AACD,GAJD;;AAMA,sBACE;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA,mBACGE,KAAK,IACJA,KAAK,CAACc,GAAN,CAAWC,GAAD,IAAS;AACjB,gBAAM;AAAEH,YAAAA,EAAF;AAAMI,YAAAA;AAAN,cAAeD,GAArB;AACA,8BACE;AAAK,YAAA,SAAS,EAAC,KAAf;AAAA,mCACE;AACE,cAAA,SAAS,EAAC,kJADZ;AAEE,cAAA,OAAO,EAAE,MAAMF,cAAc,CAACE,GAAD,CAF/B;AAAA,wBAIGC;AAJH;AAAA;AAAA;AAAA;AAAA;AADF,aAA0BJ,EAA1B;AAAA;AAAA;AAAA;AAAA,kBADF;AAUD,SAZD,CAFJ,EAgBGhB,KAAK,IACJA,KAAK,CAACkB,GAAN,CAAWG,GAAD,IAAS;AACjB,gBAAM;AAAEL,YAAAA,EAAF;AAAMI,YAAAA;AAAN,cAAeC,GAArB;AACA,8BACE;AAAK,YAAA,SAAS,EAAC,KAAf;AAAA,mCACE;AACE,cAAA,SAAS,EAAC,kJADZ;AAEE,cAAA,OAAO,EAAE,MAAMR,WAAW,CAACQ,GAAD,CAF5B;AAAA,wBAIGD;AAJH;AAAA;AAAA;AAAA;AAAA;AADF,aAA0BJ,EAA1B;AAAA;AAAA;AAAA;AAAA,kBADF;AAUD,SAZD,CAjBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAqCD,CA/DD;;GAAMjB,K;;KAAAA,K;AAiEN,eAAeA,KAAf","sourcesContent":["import React, { useEffect } from \"react\";\n\nconst Genre = ({ genre, setGenre, setPage, type, value, setValue }) => {\n  const fetchGenre = async () => {\n    const data = await fetch(\n      `https://api.themoviedb.org/3/genre/${type}/list?api_key=3d820eab8fd533d2fd7e1514e86292ea&language=en-US`\n    );\n    const { genres } = await data.json();\n    console.log(genres);\n    setGenre(genres);\n  };\n\n  useEffect(() => {\n    fetchGenre();\n  }, []);\n\n  const CategoryAdd = (genres) => {\n    setValue([...value, genres]);\n    setGenre(genre.filter((g) => g.id !== genres.id));\n    setPage(1);\n  };\n\n  const CategoryRemove = (genres) => {\n    setValue(value.filter((g) => g.id !== genres.id));\n    setGenre([...genre, genres]);\n    setPage(1);\n  };\n\n  return (\n    <>\n      <div className=\"w-full px-4 mx-auto\">\n        <div className=\"flex flex-wrap mb-3\">\n          {value &&\n            value.map((Val) => {\n              const { id, name } = Val;\n              return (\n                <div className=\"m-2\" key={id}>\n                  <button\n                    className=\"bg-gray-900 text-white px-4 py-2 text-center rounded hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-gray-500 focus:ring-opacity-50\"\n                    onClick={() => CategoryRemove(Val)}\n                  >\n                    {name}\n                  </button>\n                </div>\n              );\n            })}\n\n          {genre &&\n            genre.map((Gen) => {\n              const { id, name } = Gen;\n              return (\n                <div className=\"m-2\" key={id}>\n                  <button\n                    className=\"bg-gray-900 text-white px-4 py-2 text-center rounded hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-gray-500 focus:ring-opacity-50\"\n                    onClick={() => CategoryAdd(Gen)}\n                  >\n                    {name}\n                  </button>\n                </div>\n              );\n            })}\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Genre;"]},"metadata":{},"sourceType":"module"}