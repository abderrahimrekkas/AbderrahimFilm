{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ENAA\\\\Desktop\\\\The-Movie-Central-master\\\\src\\\\Components\\\\Genre.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Genre = _ref => {\n  _s();\n\n  let {\n    genre,\n    setGenre,\n    setPage,\n    type,\n    value,\n    setValue\n  } = _ref;\n\n  const fetchGenre = async () => {\n    const data = await fetch(`https://api.themoviedb.org/3/genre/${type}/list?api_key=3d820eab8fd533d2fd7e1514e86292ea&language=en-US`);\n    const {\n      genres\n    } = await data.json();\n    console.log(genres);\n    setGenre(genres);\n  };\n\n  useEffect(() => {\n    fetchGenre();\n  }, []); //Adding a particular genre to the selected array\n\n  const CategoryAdd = genres => {\n    //first - select everything that's inside of values using the spread operator\n    //second - add those genres that are being sent from the non-selected arrays\n    setValue([...value, genres]); //removing those genres from the non selected array that have been added to the selected array.\n\n    setGenre(genre.filter(g => g.id !== genres.id));\n    setPage(1);\n  }; //removing a perticular genre from the selected array\n\n\n  const CategoryRemove = genres => {\n    setValue(value.filter(g => g.id !== genres.id));\n    setGenre([...genre, genres]);\n    setPage(1);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-fluid\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row mb-3\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12 d-flex flex-wrap\",\n          children: [value && //if value exist\n          value.map(Val => {\n            const {\n              id,\n              name\n            } = Val;\n            return /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"m-2\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"bg-dark text-white px-4 py-2 text-center buttons\",\n                  onClick: () => CategoryRemove(Val),\n                  children: name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 44,\n                  columnNumber: 23\n                }, this)\n              }, id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 21\n              }, this)\n            }, void 0, false);\n          }), genre && //if genre exist\n          genre.map(Gen => {\n            const {\n              id,\n              name\n            } = Gen;\n            return /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"m-2\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"bg-dark text-white px-4 py-2 text-center button\",\n                  onClick: () => CategoryAdd(Gen),\n                  children: name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 61,\n                  columnNumber: 23\n                }, this)\n              }, id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 21\n              }, this)\n            }, void 0, false);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(Genre, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Genre;\nexport default Genre;\n\nvar _c;\n\n$RefreshReg$(_c, \"Genre\");","map":{"version":3,"sources":["C:/Users/ENAA/Desktop/The-Movie-Central-master/src/Components/Genre.js"],"names":["React","useEffect","Genre","genre","setGenre","setPage","type","value","setValue","fetchGenre","data","fetch","genres","json","console","log","CategoryAdd","filter","g","id","CategoryRemove","map","Val","name","Gen"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\n\nconst Genre = ({ genre, setGenre, setPage, type, value, setValue }) => {\n  const fetchGenre = async () => {\n    const data = await fetch(\n      `https://api.themoviedb.org/3/genre/${type}/list?api_key=3d820eab8fd533d2fd7e1514e86292ea&language=en-US`\n    );\n    const { genres } = await data.json();\n    console.log(genres);\n    setGenre(genres);\n  };\n\n  useEffect(() => {\n    fetchGenre();\n  }, []);\n\n  //Adding a particular genre to the selected array\n  const CategoryAdd = (genres) => {\n    //first - select everything that's inside of values using the spread operator\n    //second - add those genres that are being sent from the non-selected arrays\n    setValue([...value, genres]);\n    //removing those genres from the non selected array that have been added to the selected array.\n    setGenre(genre.filter((g) => g.id !== genres.id));\n    setPage(1);\n  };\n\n  //removing a perticular genre from the selected array\n  const CategoryRemove = (genres) => {\n    setValue(value.filter((g) => g.id !== genres.id));\n    setGenre([...genre, genres]);\n    setPage(1);\n  };\n  return (\n    <>\n      <div className=\"container-fluid\">\n        <div className=\"row mb-3\">\n          <div className=\"col-12 d-flex flex-wrap\">\n            {value && //if value exist\n              value.map((Val) => {\n                const { id, name } = Val;\n                return (\n                  <>\n                    <div className=\"m-2\" key={id}>\n                      <button\n                        className=\"bg-dark text-white px-4 py-2 text-center buttons\"\n                        onClick={() => CategoryRemove(Val)}\n                      >\n                        {name}\n                      </button>\n                    </div>\n                  </>\n                );\n              })}\n\n            {genre && //if genre exist\n              genre.map((Gen) => {\n                const { id, name } = Gen;\n                return (\n                  <>\n                    <div className=\"m-2\" key={id}>\n                      <button\n                        className=\"bg-dark text-white px-4 py-2 text-center button\"\n                        onClick={() => CategoryAdd(Gen)}\n                      >\n                        {name}\n                      </button>\n                    </div>\n                  </>\n                );\n              })}\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Genre;\n"]},"metadata":{},"sourceType":"module"}