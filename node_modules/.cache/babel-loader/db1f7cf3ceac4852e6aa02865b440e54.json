{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ENAA\\\\Desktop\\\\Application de consultation de films\\\\src\\\\Pages\\\\Info.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst InfoCard = () => {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const [info, setInfo] = useState(null);\n\n  const fetchInfo = async () => {\n    const response = await fetch(`\n      https://api.themoviedb.org/3/tv/${id}?api_key=3d820eab8fd533d2fd7e1514e86292ea&language=en-US`);\n    const data = await response.json();\n    setInfo(data);\n  };\n\n  useEffect(() => {\n    fetchInfo();\n  }, [id]);\n  if (!info) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: info.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: `https://image.tmdb.org/t/p/w300${info.poster_path}`,\n      alt: info.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Overview:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 10\n      }, this), \" \", info.overview]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"First Air Date:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 10\n      }, this), \" \", info.first_air_date]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Last Air Date:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 10\n      }, this), \" \", info.last_air_date]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Number of Seasons:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 10\n      }, this), \" \", info.number_of_seasons]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Number of Episodes:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 10\n      }, this), \" \", info.number_of_episodes]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Rating:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 10\n      }, this), \" \", info.vote_average, \" / 10\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Genres:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 10\n      }, this), \" \", info.genres.map(genre => genre.name).join(', ')]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Status:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 10\n      }, this), \" \", info.status]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n\n_s(InfoCard, \"izXFPRmkA6jCjzLNCNULtF4DHnU=\", false, function () {\n  return [useParams];\n});\n\n_c = InfoCard;\nexport default InfoCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"InfoCard\");","map":{"version":3,"sources":["C:/Users/ENAA/Desktop/Application de consultation de films/src/Pages/Info.js"],"names":["React","useEffect","useState","useParams","InfoCard","id","info","setInfo","fetchInfo","response","fetch","data","json","name","poster_path","overview","first_air_date","last_air_date","number_of_seasons","number_of_episodes","vote_average","genres","map","genre","join","status"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,kBAA1B;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAM;AAAEC,IAAAA;AAAF,MAASF,SAAS,EAAxB;AACA,QAAM,CAACG,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,IAAD,CAAhC;;AAEA,QAAMM,SAAS,GAAG,YAAY;AAC5B,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE;AAClC,wCAAwCL,EAAG,0DADX,CAA5B;AAEA,UAAMM,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACAL,IAAAA,OAAO,CAACI,IAAD,CAAP;AACD,GALD;;AAOAV,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,SAAS;AACV,GAFQ,EAEN,CAACH,EAAD,CAFM,CAAT;AAIA,MAAI,CAACC,IAAL,EAAW,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAEX,sBACE;AAAA,4BACE;AAAA,gBAAKA,IAAI,CAACO;AAAV;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,GAAG,EAAG,kCAAiCP,IAAI,CAACQ,WAAY,EAA7D;AAAgE,MAAA,GAAG,EAAER,IAAI,CAACO;AAA1E;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA,8BAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAH,OAA+BP,IAAI,CAACS,QAApC;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AAAA,8BAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAH,OAAqCT,IAAI,CAACU,cAA1C;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE;AAAA,8BAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAH,OAAoCV,IAAI,CAACW,aAAzC;AAAA;AAAA;AAAA;AAAA;AAAA,YALF,eAME;AAAA,8BAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAH,OAAwCX,IAAI,CAACY,iBAA7C;AAAA;AAAA;AAAA;AAAA;AAAA,YANF,eAOE;AAAA,8BAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAH,OAAyCZ,IAAI,CAACa,kBAA9C;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF,eAQE;AAAA,8BAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAH,OAA6Bb,IAAI,CAACc,YAAlC;AAAA;AAAA;AAAA;AAAA;AAAA,YARF,eASE;AAAA,8BAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAH,OAA6Bd,IAAI,CAACe,MAAL,CAAYC,GAAZ,CAAgBC,KAAK,IAAIA,KAAK,CAACV,IAA/B,EAAqCW,IAArC,CAA0C,IAA1C,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA,YATF,eAUE;AAAA,8BAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAH,OAA6BlB,IAAI,CAACmB,MAAlC;AAAA;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CAhCD;;GAAMrB,Q;UACWD,S;;;KADXC,Q;AAkCN,eAAeA,QAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst InfoCard = () => {\r\n  const { id } = useParams();\r\n  const [info, setInfo] = useState(null);\r\n\r\n  const fetchInfo = async () => {\r\n    const response = await fetch(`\r\n      https://api.themoviedb.org/3/tv/${id}?api_key=3d820eab8fd533d2fd7e1514e86292ea&language=en-US`);\r\n    const data = await response.json();\r\n    setInfo(data);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchInfo();\r\n  }, [id]);\r\n\r\n  if (!info) return <div>Loading...</div>;\r\n\r\n  return (\r\n    <div>\r\n      <h1>{info.name}</h1>\r\n      <img src={`https://image.tmdb.org/t/p/w300${info.poster_path}`} alt={info.name} />\r\n      <p><strong>Overview:</strong> {info.overview}</p>\r\n      <p><strong>First Air Date:</strong> {info.first_air_date}</p>\r\n      <p><strong>Last Air Date:</strong> {info.last_air_date}</p>\r\n      <p><strong>Number of Seasons:</strong> {info.number_of_seasons}</p>\r\n      <p><strong>Number of Episodes:</strong> {info.number_of_episodes}</p>\r\n      <p><strong>Rating:</strong> {info.vote_average} / 10</p>\r\n      <p><strong>Genres:</strong> {info.genres.map(genre => genre.name).join(', ')}</p>\r\n      <p><strong>Status:</strong> {info.status}</p>\r\n      {/* Ajoutez d'autres informations que vous souhaitez afficher */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InfoCard;"]},"metadata":{},"sourceType":"module"}