{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ENAA\\\\Desktop\\\\Application de consultation de films\\\\src\\\\Pages\\\\Info.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst InfoCard = () => {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const [info, setInfo] = useState(null);\n\n  const fetchInfo = async () => {\n    const response = await fetch(`\n      https://api.themoviedb.org/3/movie/${id}?api_key=3d820eab8fd533d2fd7e1514e86292ea&language=en-US`);\n    const data = await response.json();\n    setInfo(data);\n  };\n\n  useEffect(() => {\n    fetchInfo();\n  }, [id]);\n  if (!info) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-center\",\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"d-flex justify-content-center my-5\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card bg-dark text-white\",\n      style: {\n        width: '18rem'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: `https://image.tmdb.org/t/p/w500${info.poster_path}`,\n        alt: info.title,\n        className: \"card-img-top\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"card-title\",\n          children: info.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"card-text\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Overview:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 36\n          }, this), \" \", info.overview]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"card-text\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Release Date:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 36\n          }, this), \" \", info.release_date]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"card-text\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Rating:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 36\n          }, this), \" \", info.vote_average, \" / 10\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"card-text\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Genres:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 36\n          }, this), \" \", info.genres.map(genre => genre.name).join(', ')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"card-text\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Status:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 36\n          }, this), \" \", info.status]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"card-text\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Runtime:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 36\n          }, this), \" \", info.runtime, \" minutes\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n\n_s(InfoCard, \"izXFPRmkA6jCjzLNCNULtF4DHnU=\", false, function () {\n  return [useParams];\n});\n\n_c = InfoCard;\nexport default InfoCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"InfoCard\");","map":{"version":3,"sources":["C:/Users/ENAA/Desktop/Application de consultation de films/src/Pages/Info.js"],"names":["React","useEffect","useState","useParams","InfoCard","id","info","setInfo","fetchInfo","response","fetch","data","json","width","poster_path","title","overview","release_date","vote_average","genres","map","genre","name","join","status","runtime"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst InfoCard = () => {\r\n  const { id } = useParams();\r\n  const [info, setInfo] = useState(null);\r\n\r\n  const fetchInfo = async () => {\r\n    const response = await fetch(`\r\n      https://api.themoviedb.org/3/movie/${id}?api_key=3d820eab8fd533d2fd7e1514e86292ea&language=en-US`);\r\n    const data = await response.json();\r\n    setInfo(data);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchInfo();\r\n  }, [id]);\r\n\r\n  if (!info) return <div className=\"text-center\">Loading...</div>;\r\n\r\n  return (\r\n    <div className=\"d-flex justify-content-center my-5\">\r\n      <div className=\"card bg-dark text-white\" style={{ width: '18rem' }}>\r\n        <img\r\n          src={`https://image.tmdb.org/t/p/w500${info.poster_path}`}\r\n          alt={info.title}\r\n          className=\"card-img-top\"\r\n        />\r\n        <div className=\"card-body\">\r\n          <h5 className=\"card-title\">{info.title}</h5>\r\n          <p className=\"card-text\"><strong>Overview:</strong> {info.overview}</p>\r\n          <p className=\"card-text\"><strong>Release Date:</strong> {info.release_date}</p>\r\n          <p className=\"card-text\"><strong>Rating:</strong> {info.vote_average} / 10</p>\r\n          <p className=\"card-text\"><strong>Genres:</strong> {info.genres.map(genre => genre.name).join(', ')}</p>\r\n          <p className=\"card-text\"><strong>Status:</strong> {info.status}</p>\r\n          <p className=\"card-text\"><strong>Runtime:</strong> {info.runtime} minutes</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InfoCard;"]},"metadata":{},"sourceType":"module"}