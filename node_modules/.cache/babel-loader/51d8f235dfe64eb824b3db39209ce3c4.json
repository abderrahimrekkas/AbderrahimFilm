{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ENAA\\\\Desktop\\\\Application de consultation de films\\\\src\\\\Pages\\\\Info.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst InfoCard = () => {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const [info, setInfo] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  const fetchInfo = async () => {\n    try {\n      setLoading(true);\n      const response = await fetch(`https://api.themoviedb.org/3/movie/${id}?api_key=3d820eab8fd533d2fd7e1514e86292ea&language=en-US`);\n\n      if (!response.ok) {\n        throw new Error(\"Failed to fetch movie information\");\n      }\n\n      const data = await response.json();\n      setInfo(data);\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchInfo();\n  }, [id]);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex justify-center items-center h-64\",\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-red-500 text-center\",\n    children: [\"Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 21\n  }, this);\n  if (!info) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-center\",\n    children: \"No information available\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto px-4 my-8 \",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col md:flex-row gap-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"md:w-1/3 lg:w-1/4\",\n        children: info.poster_path ? /*#__PURE__*/_jsxDEV(\"img\", {\n          src: `https://image.tmdb.org/t/p/w500${info.poster_path}`,\n          alt: info.title,\n          className: \"w-full rounded-lg shadow-lg mb-4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-full h-96 bg-gray-200 flex items-center justify-center rounded-lg mb-4\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-gray-500\",\n            children: \"No image available\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"md:w-2/3 lg:w-3/4 md:mt-0 m\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-2xl md:text-3xl font-bold mb-4\",\n          children: info.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-gray-800\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"font-semibold\",\n              children: \"Overview:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 15\n            }, this), \" \", info.overview || \"No overview available\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"font-semibold\",\n              children: \"Release Date:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 15\n            }, this), \" \", info.release_date || \"Unknown\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"font-semibold\",\n              children: \"Rating:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 15\n            }, this), \" \", info.vote_average, \" / 10\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"font-semibold\",\n              children: \"Genres:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 15\n            }, this), \" \", info.genres && info.genres.length > 0 ? info.genres.map(genre => genre.name).join(', ') : \"Not specified\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"font-semibold\",\n              children: \"Status:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 15\n            }, this), \" \", info.status || \"Unknown\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"font-semibold\",\n              children: \"Runtime:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 15\n            }, this), \" \", info.runtime ? `${info.runtime} minutes` : \"Unknown\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\n_s(InfoCard, \"lR0JMD0OEjYQNCpkhaxyvI9Np00=\", false, function () {\n  return [useParams];\n});\n\n_c = InfoCard;\nexport default InfoCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"InfoCard\");","map":{"version":3,"sources":["C:/Users/ENAA/Desktop/Application de consultation de films/src/Pages/Info.js"],"names":["React","useEffect","useState","useParams","InfoCard","id","info","setInfo","loading","setLoading","error","setError","fetchInfo","response","fetch","ok","Error","data","json","err","message","poster_path","title","overview","release_date","vote_average","genres","length","map","genre","name","join","status","runtime"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst InfoCard = () => {\r\n  const { id } = useParams();\r\n  const [info, setInfo] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  const fetchInfo = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await fetch(\r\n        `https://api.themoviedb.org/3/movie/${id}?api_key=3d820eab8fd533d2fd7e1514e86292ea&language=en-US`\r\n      );\r\n      if (!response.ok) {\r\n        throw new Error(\"Failed to fetch movie information\");\r\n      }\r\n      const data = await response.json();\r\n      setInfo(data);\r\n    } catch (err) {\r\n      setError(err.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchInfo();\r\n  }, [id]);\r\n\r\n  if (loading) return <div className=\"flex justify-center items-center h-64\">Loading...</div>;\r\n  if (error) return <div className=\"text-red-500 text-center\">Error: {error}</div>;\r\n  if (!info) return <div className=\"text-center\">No information available</div>;\r\n\r\n  return (\r\n    <div className=\"container mx-auto px-4 my-8 \">\r\n      <div className=\"flex flex-col md:flex-row gap-8\">\r\n        <div className=\"md:w-1/3 lg:w-1/4\">\r\n          {info.poster_path ? (\r\n            <img \r\n              src={`https://image.tmdb.org/t/p/w500${info.poster_path}`} \r\n              alt={info.title} \r\n              className=\"w-full rounded-lg shadow-lg mb-4\" \r\n            />\r\n          ) : (\r\n            <div className=\"w-full h-96 bg-gray-200 flex items-center justify-center rounded-lg mb-4\">\r\n              <span className=\"text-gray-500\">No image available</span>\r\n            </div>\r\n          )}\r\n        </div>\r\n        \r\n        <div className=\"md:w-2/3 lg:w-3/4 md:mt-0 m\">\r\n          <h2 className=\"text-2xl md:text-3xl font-bold mb-4\">{info.title}</h2>\r\n          \r\n          <div className=\"space-y-3\">\r\n            <p className=\"text-gray-800\">\r\n              <span className=\"font-semibold\">Overview:</span> {info.overview || \"No overview available\"}\r\n            </p>\r\n            \r\n            <p>\r\n              <span className=\"font-semibold\">Release Date:</span> {info.release_date || \"Unknown\"}\r\n            </p>\r\n            \r\n            <p>\r\n              <span className=\"font-semibold\">Rating:</span> {info.vote_average} / 10\r\n            </p>\r\n            \r\n            <p>\r\n              <span className=\"font-semibold\">Genres:</span> {\r\n                info.genres && info.genres.length > 0 \r\n                  ? info.genres.map(genre => genre.name).join(', ') \r\n                  : \"Not specified\"\r\n              }\r\n            </p>\r\n            \r\n            <p>\r\n              <span className=\"font-semibold\">Status:</span> {info.status || \"Unknown\"}\r\n            </p>\r\n            \r\n            <p>\r\n              <span className=\"font-semibold\">Runtime:</span> {info.runtime ? `${info.runtime} minutes` : \"Unknown\"}\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InfoCard;"]},"metadata":{},"sourceType":"module"}