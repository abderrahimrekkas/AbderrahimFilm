[{"C:\\Users\\ENAA\\Desktop\\Application de consultation de films\\src\\index.js":"1","C:\\Users\\ENAA\\Desktop\\Application de consultation de films\\src\\App.js":"2","C:\\Users\\ENAA\\Desktop\\Application de consultation de films\\src\\Components\\Footer.js":"3","C:\\Users\\ENAA\\Desktop\\Application de consultation de films\\src\\useGenre.js":"4","C:\\Users\\ENAA\\Desktop\\Application de consultation de films\\src\\Components\\context.js":"5","C:\\Users\\ENAA\\Desktop\\Application de consultation de films\\src\\Components\\Header.js":"6","C:\\Users\\ENAA\\Desktop\\Application de consultation de films\\src\\Pages\\Movies.js":"7","C:\\Users\\ENAA\\Desktop\\Application de consultation de films\\src\\Pages\\Error.js":"8","C:\\Users\\ENAA\\Desktop\\Application de consultation de films\\src\\Components\\Pagination.js":"9","C:\\Users\\ENAA\\Desktop\\Application de consultation de films\\src\\Components\\config.js":"10","C:\\Users\\ENAA\\Desktop\\Application de consultation de films\\src\\Components\\Genre.js":"11","C:\\Users\\ENAA\\Desktop\\Application de consultation de films\\src\\Pages\\Info.js":"12","C:\\Users\\ENAA\\Desktop\\Application de consultation de films\\src\\Pages\\Search.js":"13","C:\\Users\\ENAA\\Desktop\\Application de consultation de films\\src\\Pages\\Trending.js":"14","C:\\Users\\ENAA\\Desktop\\Application de consultation de films\\src\\Pages\\TV.js":"15"},{"size":263,"mtime":1744061375554,"results":"16","hashOfConfig":"17"},{"size":864,"mtime":1744365032380,"results":"18","hashOfConfig":"17"},{"size":1031,"mtime":1744285338513,"results":"19","hashOfConfig":"17"},{"size":210,"mtime":1744061375591,"results":"20","hashOfConfig":"17"},{"size":1037,"mtime":1744314910438,"results":"21","hashOfConfig":"17"},{"size":1064,"mtime":1744315625079,"results":"22","hashOfConfig":"17"},{"size":2841,"mtime":1744281772447,"results":"23","hashOfConfig":"17"},{"size":346,"mtime":1744292744145,"results":"24","hashOfConfig":"17"},{"size":717,"mtime":1744207909177,"results":"25","hashOfConfig":"17"},{"size":443,"mtime":1744211623233,"results":"26","hashOfConfig":"17"},{"size":1699,"mtime":1744362687682,"results":"27","hashOfConfig":"17"},{"size":1733,"mtime":1744292773169,"results":"28","hashOfConfig":"17"},{"size":3114,"mtime":1744285221405,"results":"29","hashOfConfig":"17"},{"size":2652,"mtime":1744285412480,"results":"30","hashOfConfig":"17"},{"size":3078,"mtime":1744386929765,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"12pwznc",{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"49"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"49"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"49"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\ENAA\\Desktop\\Application de consultation de films\\src\\index.js",[],["70","71"],"C:\\Users\\ENAA\\Desktop\\Application de consultation de films\\src\\App.js",["72"],"C:\\Users\\ENAA\\Desktop\\Application de consultation de films\\src\\Components\\Footer.js",[],"C:\\Users\\ENAA\\Desktop\\Application de consultation de films\\src\\useGenre.js",[],"C:\\Users\\ENAA\\Desktop\\Application de consultation de films\\src\\Components\\context.js",["73","74","75"],"import React, { createContext, useState, useEffect, useContext } from \"react\";\n\nconst AppContext = createContext();\n\nconst AppProvider = ({ children, media_type, id }) => {\n  const [data, setData] = useState([]);\n  const [video, setVideo] = useState([]);\n\n  const fetchData = async () => {\n    const Data = await fetch(\n      `https://api.themoviedb.org/3/${media_type}/${id}?api_key=3d820eab8fd533d2fd7e1514e86292ea&language=en-US`\n    );\n    const DataJ = await Data.json();\n    \n    setData(DataJ.adult);\n  };\n\n  const fetchVideo = async () => {\n    const ytvideo = await fetch(\n      `https://api.themoviedb.org/3/${media_type}/${id}/videos?api_key=3d820eab8fd533d2fd7e1514e86292ea&language=en-US`\n    );\n    const YTvideo = await ytvideo.json();\n    console.log(YTvideo.results[0]);\n    setVideo(YTvideo.results[0]);\n  };\n\n  useEffect(() => {\n    fetchData();\n    fetchVideo();\n  }, []);\n  return (\n    <AppContext.Provider value={{ video }}>{children}</AppContext.Provider>\n  );\n};\n\n\nexport { AppContext, AppProvider };\n\n\n\n\n\n\n\n\n\n\n\n","C:\\Users\\ENAA\\Desktop\\Application de consultation de films\\src\\Components\\Header.js",[],"C:\\Users\\ENAA\\Desktop\\Application de consultation de films\\src\\Pages\\Movies.js",["76"],"import React, { useState, useEffect } from \"react\";\nimport { img_300, unavailable } from \"../Components/config\";\nimport Pagination from \"../Components/Pagination\";\nimport Genre from \"../Components/Genre\";\nimport useGenre from \"../useGenre\";\nimport { Link } from \"react-router-dom\";\n\nconst Movies = () => {\n  const [state, setState] = useState([]); // Store the fetched data\n  const [page, setPage] = useState(1); // Keep track of the page numbers\n  const [genre, setGenre] = useState([]); // Store the original genre values\n  const [value, setValue] = useState([]); // Store the selected genre values\n  const genreURL = useGenre(value);\n\n  const fetchTrending = async () => {\n    const data = await fetch(`\n      https://api.themoviedb.org/3/discover/movie?api_key=3d820eab8fd533d2fd7e1514e86292ea&language=en-US&sort_by=popularity.desc&include_adult=false&include_video=false&page=${page}&with_genres=${genreURL}`);\n    const dataJ = await data.json();\n    setState(dataJ.results);\n  };\n\n  useEffect(() => {\n    fetchTrending();\n  }, [page, genreURL]);\n\n  return (\n    <>\n      <div className=\"container\">\n        <div className=\"row py-5 my-5\">\n          <div className=\"col-12 text-center mt-2 mb-4 fs-1 fw-bold text-decoration-underline\">\n            Movies\n          </div>\n          <Genre\n            genre={genre}\n            setGenre={setGenre}\n            setPage={setPage}\n            type=\"movie\"\n            value={value}\n            setValue={setValue}\n          />\n          {state.map((Val) => {\n            const {\n              title,\n              poster_path,\n              release_date,\n              media_type,\n              id,\n            } = Val;\n            return (\n              <div className=\" col-md-3 col-sm-4 py-3\" id=\"card\" key={id}>\n                <div className=\"card bg-gray-900 text-white rounded-lg shadow-md w-70 \" key={id}>\n                  <img\n                    src={poster_path ? `${img_300}/${poster_path}` : unavailable}\n                    className=\"card-img-top pt-3 pb-0 px-3\"\n                    alt={title}\n                  />\n                  <div className=\"card-body\">\n                    <h5 className=\"text-center text-lg font-semibold mb-2\">\n                      {title}\n                    </h5>\n                    <div className=\"flex justify-evenly text-sm text-gray-300\">\n                      <div>{media_type === \"tv\" ? \"TV Series\" : \"Movie\"}</div>\n                      <div>{release_date}</div>\n                      <Link \n  to={`/Infocard/${id}`} \n  className=\"text-white-400 hover:underline\"\n>\n  Information\n</Link>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            );\n          })}\n          <Pagination page={page} setPage={setPage} />\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Movies;",["77","78"],"C:\\Users\\ENAA\\Desktop\\Application de consultation de films\\src\\Pages\\Error.js",[],"C:\\Users\\ENAA\\Desktop\\Application de consultation de films\\src\\Components\\Pagination.js",[],["79","80"],"C:\\Users\\ENAA\\Desktop\\Application de consultation de films\\src\\Components\\config.js",[],"C:\\Users\\ENAA\\Desktop\\Application de consultation de films\\src\\Components\\Genre.js",["81"],"C:\\Users\\ENAA\\Desktop\\Application de consultation de films\\src\\Pages\\Info.js",["82"],"import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst InfoCard = () => {\r\n  const { id } = useParams();\r\n  const [info, setInfo] = useState(null);\r\n\r\n  const fetchInfo = async () => {\r\n    const response = await fetch(\r\n      `https://api.themoviedb.org/3/movie/${id}?api_key=3d820eab8fd533d2fd7e1514e86292ea&language=en-US`\r\n    );\r\n    const data = await response.json();\r\n    setInfo(data);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchInfo();\r\n  }, [id]);\r\n\r\n  if (!info) return <div className=\"text-center\">Loading...</div>;\r\n\r\n  return (\r\n    <div className=\" mx-auto my-8 px-4\">\r\n      <div className=\"flex flex-nowrap gap-6 \">\r\n        {/* Image à gauche */}\r\n        <div className=\"w-1/3\">\r\n          <img\r\n            src={`https://image.tmdb.org/t/p/w500${info.poster_path}`}\r\n            alt={info.title}\r\n            className=\"rounded-xl shadow-lg w-50\"\r\n          />\r\n        </div>\r\n\r\n        {/* Infos à droite */}\r\n        <div className=\"w-2/3 space-y-3\">\r\n          <h2 className=\"text-3xl font-bold text-gray-800\">{info.title}</h2>\r\n          <p><span className=\"font-semibold\">Overview:</span> {info.overview}</p>\r\n          <p><span className=\"font-semibold\">Release Date:</span> {info.release_date}</p>\r\n          <p><span className=\"font-semibold \">Rating:</span> {info.vote_average} / 10</p>\r\n          <p><span className=\"font-semibold\">Genres:</span> {info.genres.map(genre => genre.name).join(', ')}</p>\r\n          <p><span className=\"font-semibold\">Status:</span> {info.status}</p>\r\n          <p><span className=\"font-semibold\">Runtime:</span> {info.runtime} minutes</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InfoCard;\r\n","C:\\Users\\ENAA\\Desktop\\Application de consultation de films\\src\\Pages\\Search.js",["83","84","85"],"import React, { useState, useEffect } from \"react\";\nimport Pagination from \"../Components/Pagination\";\nimport { img_300, unavailable } from \"../Components/config\";\nimport { Link } from \"react-router-dom\";\n\nconst Search = () => {\n  const [searchText, setSearchText] = useState(\"\");\n  const [page, setPage] = useState(1);\n  const [content, setContent] = useState([]);\n\n  const fetchSearch = async () => {\n    const data = await fetch(\n      `https://api.themoviedb.org/3/search/multi?api_key=3d820eab8fd533d2fd7e1514e86292ea&language=en-US&query=${searchText}&page=${page}&include_adult=false`\n    );\n    const { results } = await data.json();\n    setContent(results);\n  };\n\n  useEffect(() => {\n    fetchSearch();\n  }, []);\n\n  const Search = () => {\n    fetchSearch();\n  };\n\n  const Trigger = (e) => {\n    setSearchText(e.target.value);\n  };\n  return (\n    <div className=\"container\">\n  <div className=\"row pt-3 mb-5 pb-5\">\n    <div className=\"col-12 pt-5 pb-3 mt-5 d-flex justify-content-center align-items-center\">\n      <input\n        type=\"text\"\n        placeholder=\"search...\"\n        onChange={Trigger}\n        className=\"form-control-lg col-6 search bg-dark text-white border border-0\"\n      />\n      <button\n        className=\"btn btn-primary text-white mx-2 col-md-1 col-sm-2 py-2\"\n        onClick={Search}\n      >\n        <i className=\"fas fa-search\"></i>\n      </button>\n    </div>\n\n    {content &&\n      content.map((Val) => {\n        const {\n          name,\n          title,\n          poster_path,\n          first_air_date,\n          release_date,\n          media_type,\n          id,\n        } = Val;\n\n        return (\n          <div className=\"col-md-4 col-sm-6 col-12 d-flex justify-content-center py-3\" key={id}>\n            <div className=\"card bg-dark text-white\" style={{ width: \"18rem\" }}>\n              <img\n                src={poster_path ? `${img_300}/${poster_path}` : unavailable}\n                className=\"card-img-top\"\n                alt={title || name}\n                style={{ height: \"27rem\", objectFit: \"cover\" }}\n              />\n              <div className=\"card-body d-flex flex-column justify-content-between\">\n                <h5 className=\"card-title text-center\">\n                  {title || name}\n                </h5>\n                <p className=\"text-center mb-0\">\n                  {media_type === \"tv\" ? \"TV Show\" : \"Movie\"}{\" \"}\n                  {first_air_date || release_date && (\n                    <span className=\"d-block\">\n                      {first_air_date || release_date}\n                    </span>\n                  )}\n                   <Link \n                                          to={`/Infocard/${id}`} \n                                          className=\"text-white-400 hover:underline\"\n                                        >\n                                          Information\n                                        </Link>\n                </p>\n              </div>\n            </div>\n          </div>\n        );\n      })}\n\n    {page > 1 && <Pagination page={page} setPage={setPage} />}\n  </div>\n</div>\n  );\n};\n\nexport default Search;\n","C:\\Users\\ENAA\\Desktop\\Application de consultation de films\\src\\Pages\\Trending.js",["86"],"import React, { useState, useEffect } from \"react\";\nimport { img_300, unavailable } from \"../Components/config\";\nimport { Link } from \"react-router-dom\";\nimport Pagination from \"../Components/Pagination\";\nimport Search from \"./Search\";\n\nconst Trending = () => {\n  const [state, setState] = useState([]);\n  const [page, setPage] = useState(1);\n\n  const fetchTrending = async () => {\n    const data = await fetch(\n      `https://api.themoviedb.org/3/trending/all/day?api_key=3d820eab8fd533d2fd7e1514e86292ea&page=${page}`\n    );\n    const dataJ = await data.json();\n    setState(dataJ.results);\n  };\n\n  useEffect(() => {\n    fetchTrending();\n  }, [page]);\n\n  return (\n    <>\n<Search />\n      <div className=\"max-w-screen-xl mx-auto px-4\">\n        <div className=\"py-12 my-8\">\n          <div className=\"text-2xl font-bold underline flex justify-center items-center mb-8\">\n            <h4 className=\"text-2xl\">Trending Today</h4>\n          </div>\n\n          <div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-6\">\n            {state.map((Val) => {\n              const {\n                name,\n                title,\n                poster_path,\n                first_air_date,\n                release_date,\n                media_type,\n                id,\n              } = Val;\n\n              return (\n                <div key={id} className=\"flex justify-center\">\n                  <div className=\"bg-gray-900 text-white rounded-lg shadow-md w-72\">\n                    <img\n                      src={poster_path ? `${img_300}/${poster_path}` : unavailable}\n                      alt={title}\n                      className=\"w-full h-96 object-cover pt-3 pb-0 px-3 rounded-lg\"\n                    />\n                    <div className=\"p-4\">\n                      <h5 className=\"text-center text-lg font-semibold mb-2\">\n                        {title || name}\n                      </h5>\n                      <div className=\"flex justify-evenly text-sm text-gray-300\">\n                        <div>{media_type === \"tv\" ? \"TV\" : \"Movie\"}</div>\n                        <div>{first_air_date || release_date}</div>\n                      <Link \n                        to={`/Infocard/${id}`} \n                        className=\"text-white-400 hover:underline\"\n                      >\n                        Information\n                      </Link>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n\n          <Pagination page={page} setPage={setPage} />\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Trending;\n","C:\\Users\\ENAA\\Desktop\\Application de consultation de films\\src\\Pages\\TV.js",["87","88","89"],{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","severity":1,"message":"95","line":8,"column":8,"nodeType":"96","messageId":"97","endLine":8,"endColumn":14},{"ruleId":"94","severity":1,"message":"98","line":1,"column":53,"nodeType":"96","messageId":"97","endLine":1,"endColumn":63},{"ruleId":"94","severity":1,"message":"99","line":6,"column":10,"nodeType":"96","messageId":"97","endLine":6,"endColumn":14},{"ruleId":"100","severity":1,"message":"101","line":30,"column":6,"nodeType":"102","endLine":30,"endColumn":8,"suggestions":"103"},{"ruleId":"100","severity":1,"message":"104","line":24,"column":6,"nodeType":"102","endLine":24,"endColumn":22,"suggestions":"105"},{"ruleId":"90","replacedBy":"106"},{"ruleId":"92","replacedBy":"107"},{"ruleId":"90","replacedBy":"108"},{"ruleId":"92","replacedBy":"109"},{"ruleId":"100","severity":1,"message":"110","line":29,"column":6,"nodeType":"102","endLine":29,"endColumn":8,"suggestions":"111"},{"ruleId":"100","severity":1,"message":"112","line":18,"column":6,"nodeType":"102","endLine":18,"endColumn":10,"suggestions":"113"},{"ruleId":"100","severity":1,"message":"114","line":21,"column":6,"nodeType":"102","endLine":21,"endColumn":8,"suggestions":"115"},{"ruleId":"116","severity":1,"message":"117","line":75,"column":35,"nodeType":"118","messageId":"119","endLine":75,"endColumn":37},{"ruleId":"116","severity":1,"message":"117","line":75,"column":51,"nodeType":"118","messageId":"119","endLine":75,"endColumn":53},{"ruleId":"100","severity":1,"message":"104","line":21,"column":6,"nodeType":"102","endLine":21,"endColumn":12,"suggestions":"120"},{"ruleId":"94","severity":1,"message":"121","line":8,"column":9,"nodeType":"96","messageId":"97","endLine":8,"endColumn":11},{"ruleId":"100","severity":1,"message":"104","line":23,"column":6,"nodeType":"102","endLine":23,"endColumn":22,"suggestions":"122"},{"ruleId":"123","severity":1,"message":"124","line":68,"column":25,"nodeType":"125","endLine":68,"endColumn":36},"no-native-reassign",["126"],"no-negated-in-lhs",["127"],"no-unused-vars","'Search' is defined but never used.","Identifier","unusedVar","'useContext' is defined but never used.","'data' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'fetchData' and 'fetchVideo'. Either include them or remove the dependency array.","ArrayExpression",["128"],"React Hook useEffect has a missing dependency: 'fetchTrending'. Either include it or remove the dependency array.",["129"],["126"],["127"],["126"],["127"],"React Hook useEffect has a missing dependency: 'fetchGenre'. Either include it or remove the dependency array.",["130"],"React Hook useEffect has a missing dependency: 'fetchInfo'. Either include it or remove the dependency array.",["131"],"React Hook useEffect has a missing dependency: 'fetchSearch'. Either include it or remove the dependency array.",["132"],"no-mixed-operators","Unexpected mix of '||' and '&&'. Use parentheses to clarify the intended order of operations.","LogicalExpression","unexpectedMixedOperator",["133"],"'id' is assigned a value but never used.",["134"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"135","fix":"136"},{"desc":"137","fix":"138"},{"desc":"139","fix":"140"},{"desc":"141","fix":"142"},{"desc":"143","fix":"144"},{"desc":"145","fix":"146"},{"desc":"137","fix":"147"},"Update the dependencies array to be: [fetchData, fetchVideo]",{"range":"148","text":"149"},"Update the dependencies array to be: [page, genreURL, fetchTrending]",{"range":"150","text":"151"},"Update the dependencies array to be: [fetchGenre]",{"range":"152","text":"153"},"Update the dependencies array to be: [fetchInfo, id]",{"range":"154","text":"155"},"Update the dependencies array to be: [fetchSearch]",{"range":"156","text":"157"},"Update the dependencies array to be: [fetchTrending, page]",{"range":"158","text":"159"},{"range":"160","text":"151"},[888,890],"[fetchData, fetchVideo]",[1035,1051],"[page, genreURL, fetchTrending]",[690,692],"[fetchGenre]",[501,505],"[fetchInfo, id]",[717,719],"[fetchSearch]",[645,651],"[fetchTrending, page]",[930,946]]